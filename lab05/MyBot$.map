Load Map - Wed Sep 29 10:24:10 EDT 2010

Main class:       MyBot
Classes:          53
Interfaces:       3
Methods:          120
Constants:        78
Instance fields:  77
Static fields:    22
Static data size: 100
Code size:        6674
Start address:    8000
End address:      9a11

80dc 80dd java.lang.Object.<init>()
80e2 80f5 java.lang.Object.getClass()
80ff 8113 java.lang.Object.clone()
811d 8141 java.lang.Object.toString()
8228 8239 java.lang.Thread.run()
823e 8244 java.lang.Thread.setName(java.lang.String)
8248 8273 java.lang.Thread.sleep(long)
8277 827c java.lang.Thread.<clinit>()
828a 8290 java.lang.Thread.<init>()
8299 82b1 java.lang.Thread.<init>(java.lang.Runnable)
82b5 82d4 java.lang.Thread.<init>(java.lang.Runnable, java.lang.String)
82de 830e java.lang.Thread.toString()
8313 8318 java.lang.Thread.getName()
8372 83b1 com.ridgesoft.intellibrain.StartupThread.run()
83fd 8407 java.lang.String.createString(byte[])
840b 841a java.lang.String.<init>(byte[], int)
841f 842a java.lang.String.getBytes()
842e 843f java.lang.String.<init>()
8443 8458 java.lang.String.<init>(byte[])
845d 8463 java.lang.String.length()
8468 848a java.lang.String.getBytes(int, int, byte[], int)
848e 84be java.lang.String.<init>(char[], int, int)
84c2 84ec java.lang.String.<init>(byte[], int, int)
84f0 84f5 java.lang.String.valueOf(java.lang.Object)
84fa 84fc java.lang.String.toString()
8590 868e java.lang.Throwable.vmThrow(int)
869a 86bf java.lang.Throwable.<init>()
86cc 8771 java.lang.Throwable.printStackTrace()
8775 879c java.lang.Throwable.<clinit>()
87a5 87ad java.lang.Throwable.init()
87b9 87fb java.lang.Throwable.<init>(java.lang.String)
88a1 88ab java.lang.InternalError.<init>()
88af 88ba java.lang.InternalError.<init>(java.lang.String)
88e9 88f3 java.lang.OutOfMemoryError.<init>()
88f7 8902 java.lang.OutOfMemoryError.<init>(java.lang.String)
8933 893d java.lang.StackOverflowError.<init>()
8941 894c java.lang.StackOverflowError.<init>(java.lang.String)
8d53 8e7d MyBot.main(java.lang.String[])
8eb1 8ec7 java.io.OutputStream.write(byte[])
8ed1 8ed2 java.io.OutputStream.flush()
8ed7 8ef5 java.io.OutputStream.write(byte[], int, int)
8f30 8f3a java.io.FilterOutputStream.<init>(java.io.OutputStream)
8f3f 8f48 java.io.FilterOutputStream.write(byte[])
8f4d 8f56 java.io.FilterOutputStream.write(int)
8f5b 8f63 java.io.FilterOutputStream.flush()
8f68 8f73 java.io.FilterOutputStream.write(byte[], int, int)
8fa6 8fb1 java.io.PrintStream.<init>(java.io.OutputStream)
8fb6 8fc0 java.io.PrintStream.println(java.lang.String)
8fcd 8fe4 java.io.PrintStream.print(java.lang.String)
8ff1 900b java.io.PrintStream.println()
9045 9054 com.ridgesoft.io.OutputStreamTee.<init>(java.io.OutputStream, java.io.OutputStream)
9068 9081 com.ridgesoft.io.OutputStreamTee.write(byte[])
9095 90ae com.ridgesoft.io.OutputStreamTee.write(int)
90c2 90d9 com.ridgesoft.io.OutputStreamTee.flush()
90ed 910a com.ridgesoft.io.OutputStreamTee.write(byte[], int, int)
9159 91bc com.ridgesoft.io.DisplayOutputStream.<init>(com.ridgesoft.io.Display)
91c0 91cd com.ridgesoft.io.DisplayOutputStream.<clinit>()
91d2 91db com.ridgesoft.io.DisplayOutputStream.write(byte[])
91e0 922d com.ridgesoft.io.DisplayOutputStream.write(int)
9232 925e com.ridgesoft.io.DisplayOutputStream.flush()
9263 926f com.ridgesoft.io.DisplayOutputStream.write(byte[], int, int)
9273 92f1 com.ridgesoft.io.DisplayOutputStream.scroll()
933a 933f com.ridgesoft.vm.DebugOutputStream.<clinit>()
9344 934d com.ridgesoft.vm.DebugOutputStream.write(byte[])
9352 939b com.ridgesoft.vm.DebugOutputStream.write(int)
93a8 93c9 com.ridgesoft.vm.DebugOutputStream.flush()
93ce 93da com.ridgesoft.vm.DebugOutputStream.write(byte[], int, int)
93fd 9401 com.ridgesoft.vm.VM.getDebugOutputStream()
940f 941e com.ridgesoft.vm.VM.<clinit>()
945c 9473 com.ridgesoft.intellibrain.IntelliBrain.getOutputStream()
9477 948b com.ridgesoft.intellibrain.IntelliBrain.getLcdDisplay()
948f 94d2 com.ridgesoft.intellibrain.IntelliBrain.getServo(int)
94d6 94dd com.ridgesoft.intellibrain.IntelliBrain.<clinit>()
94e9 958f com.ridgesoft.intellibrain.IntelliBrain.initialize()
95c0 95c5 java.lang.System.setOut(java.io.PrintStream)
95c9 95ce java.lang.System.setErr(java.io.PrintStream)
962d 9637 com.ridgesoft.io.Display.print(int, java.lang.String)
963c 9670 com.ridgesoft.io.Display.print(int, byte[])
9675 967a com.ridgesoft.io.Display.getWidth()
967f 9684 com.ridgesoft.io.Display.getHeight()
9688 9699 com.ridgesoft.io.Display.<init>(int, int)
96d3 96db com.ridgesoft.intellibrain.IntelliBrainDisplay.<init>()
96e0 96e7 com.ridgesoft.intellibrain.IntelliBrainDisplay.printChar(int, int, byte)
9727 972c java.lang.Class.getName()
9730 973a java.lang.Class.<init>(java.lang.String)
978c 97a7 java.lang.StringBuilder.<init>(java.lang.String)
97ac 97d5 java.lang.StringBuilder.append(java.lang.String)
97da 97eb java.lang.StringBuilder.toString()
97f0 9829 java.lang.StringBuilder.ensureCapacity(int)
982e 9889 java.lang.StringBuilder.append(int)
988e 98bb java.lang.StringBuilder.append(char[], int, int)
98bf 98d1 java.lang.StringBuilder.<init>()
98f8 993c java.lang.Integer.toHexString(int)
9941 9949 java.lang.Integer.toString()
994d 995c java.lang.Integer.toString(int)
9998 99a3 com.ridgesoft.intellibrain.IntelliBrainServo.<init>(int)
99a8 99b1 com.ridgesoft.intellibrain.IntelliBrainServo.setPosition(int)
99b6 99bf com.ridgesoft.intellibrain.IntelliBrainServo.off()
